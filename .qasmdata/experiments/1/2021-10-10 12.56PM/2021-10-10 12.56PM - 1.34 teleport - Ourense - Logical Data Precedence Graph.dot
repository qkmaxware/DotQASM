digraph {
    node_[0.1] u3 register0[0] [EventIndex="0" EventType="DotQasm.Scheduling.GateEvent" Depth="1" Dependencies="0" Latency="00:00:00.0010000" Priority="0.015"];
    node_[1.1] u3 register0[1] [EventIndex="1" EventType="DotQasm.Scheduling.GateEvent" Depth="1" Dependencies="0" Latency="00:00:00.0010000" Priority="0.017"];
    node_[2.2] cx register0[1] register0[2] [EventIndex="2" EventType="DotQasm.Scheduling.ControlledGateEvent" Depth="2" Dependencies="1" Latency="00:00:00.0020000" Priority="0.016"];
    node_[3.3] barrier register0[0] register0[1] register0[2] [EventIndex="3" EventType="DotQasm.Scheduling.BarrierEvent" Depth="3" Dependencies="3" Latency="00:00:00.0010000" Priority="0.013999999999999999"];
    node_[4.4] cx register0[0] register0[1] [EventIndex="4" EventType="DotQasm.Scheduling.ControlledGateEvent" Depth="4" Dependencies="4" Latency="00:00:00.0020000" Priority="0.013"];
    node_[5.5] u3 register0[0] [EventIndex="5" EventType="DotQasm.Scheduling.GateEvent" Depth="5" Dependencies="5" Latency="00:00:00.0010000" Priority="0.011"];
    node_[6.6] measurement register0[0] [EventIndex="6" EventType="DotQasm.Scheduling.MeasurementEvent" Depth="6" Dependencies="6" Latency="00:00:00.0030000" Priority="0.01"];
    node_[7.5] measurement register0[1] [EventIndex="7" EventType="DotQasm.Scheduling.MeasurementEvent" Depth="5" Dependencies="5" Latency="00:00:00.0030000" Priority="0.008"];
    node_[8.7] if 1 then u3 register0[2] [EventIndex="8" EventType="DotQasm.Scheduling.IfEvent" Depth="7" Dependencies="11" Latency="00:00:00.0020000" Priority="0.007"];
    node_[9.8] if 1 then u3 register0[2] [EventIndex="9" EventType="DotQasm.Scheduling.IfEvent" Depth="8" Dependencies="18" Latency="00:00:00.0020000" Priority="0.005"];
    node_[10.9] measurement register0[2] [EventIndex="10" EventType="DotQasm.Scheduling.MeasurementEvent" Depth="9" Dependencies="19" Latency="00:00:00.0030000" Priority="0.003"];
    node_[0.1] u3 register0[0] -> node_[3.3] barrier register0[0] register0[1] register0[2];
    node_[1.1] u3 register0[1] -> node_[2.2] cx register0[1] register0[2];
    node_[2.2] cx register0[1] register0[2] -> node_[3.3] barrier register0[0] register0[1] register0[2];
    node_[3.3] barrier register0[0] register0[1] register0[2] -> node_[4.4] cx register0[0] register0[1];
    node_[3.3] barrier register0[0] register0[1] register0[2] -> node_[8.7] if 1 then u3 register0[2];
    node_[4.4] cx register0[0] register0[1] -> node_[5.5] u3 register0[0];
    node_[4.4] cx register0[0] register0[1] -> node_[7.5] measurement register0[1];
    node_[5.5] u3 register0[0] -> node_[6.6] measurement register0[0];
    node_[6.6] measurement register0[0] -> node_[8.7] if 1 then u3 register0[2];
    node_[7.5] measurement register0[1] -> node_[9.8] if 1 then u3 register0[2];
    node_[8.7] if 1 then u3 register0[2] -> node_[9.8] if 1 then u3 register0[2];
    node_[9.8] if 1 then u3 register0[2] -> node_[10.9] measurement register0[2];
}
